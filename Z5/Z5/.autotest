{
    "id": 10005,
    "name": "Tehnike programiranja (2016\/2017), Zadaca 5, Zadatak 5",
    "language": "C++",
    "required_compiler": "g++",
    "preferred_compiler": "g++",
    "compiler_features": [

    ],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "compile": "true",
    "run": "false",
    "test": "true",
    "debug": "true",
    "profile": "true",
    "test_specifications": [
        {
            "id": 71234,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT1 - testiranje konstruktora, metode RegistrirajTemperature i DajBrojRegistriranih temperatura\n{\n    Temperature a(-4,9), b(-13, 20);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,5});\n    a.RegistrirajTemperature({2,6});\n    a.RegistrirajTemperature({0,3});\n    b.RegistrirajTemperature({1,5});\n    b.RegistrirajTemperature({2,6});\n    b.RegistrirajTemperature({0,3});\n    std::cout << a.DajBrojRegistriranihTemperatura() << \" \" << b.DajBrojRegistriranihTemperatura();\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "6 3"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3908,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT2 - testiranje metoda DajMinimalnuTemperaturu i DajMaksimalnuTemperaturu\n{\n    Temperature a(-4,9), b(-13, 20);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,5});\n    a.RegistrirajTemperature({2,6});\n    a.RegistrirajTemperature({0,3});\n    b.RegistrirajTemperature({1,5});\n    b.RegistrirajTemperature({2,6});\n    b.RegistrirajTemperature({0,3});\n    std::cout << a.DajMinimalnuTemperaturu() << \" \" << b.DajMinimalnuTemperaturu() << std::endl;\n    std::cout << a.DajMaksimalnuTemperaturu() << \" \" << b.DajMaksimalnuTemperaturu();\n}  ",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "-3 0\\n7 6"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3909,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT3 - testiranje metoda DajBrojTemperaturaVecihOd i DajBrojTemperaturaManjihOd\n{\n    Temperature a(-4,9), b(-13, 20);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,5});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,5});\n    a.RegistrirajTemperature({2,6});\n    a.RegistrirajTemperature({0,3});\n    b.RegistrirajTemperature({1,5});\n    b.RegistrirajTemperature({2,6});\n    b.RegistrirajTemperature({0,2});\n    std::cout << a.DajBrojTemperaturaVecihOd(3) << \" \" << b.DajBrojTemperaturaVecihOd(3) << std::endl;\n    std::cout << a.DajBrojTemperaturaManjihOd(4) << \" \" << b.DajBrojTemperaturaManjihOd(4);\n}  ",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "4 2\\n6 3",
                "4 2\\n8 4"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3910,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT4 - testiranje izuzetaka metoda DajMinimalnuTemperaturu i DajMaksimalnuTemperaturu\n{\n    Temperature a(-4,9);\n    \n    try\n    {\n        a.DajMinimalnuTemperaturu();\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error &e)\n    {\n        std::cout << e.what() << std::endl;\n    }\n    \n    try\n    {\n        a.DajMaksimalnuTemperaturu();\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error &e)\n    {\n        std::cout << e.what();\n    }\n}  ",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Nema registriranih temperatura\\nNema registriranih temperatura"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3911,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT5 - testiranje izuzetaka metoda DajBrojTemperaturaVecihOd i DajBrojTemperaturaManjihOd\n{\n    Temperature a(-4,9);\n    \n    try\n    {\n        a.DajBrojTemperaturaVecihOd(5);\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error &e)\n    {\n        std::cout << e.what() << std::endl;\n    }\n    \n    try\n    {\n        a.DajBrojTemperaturaManjihOd(5);\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error &e)\n    {\n        std::cout << e.what();\n    }\n}  ",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Nema registriranih temperatura\\nNema registriranih temperatura"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3912,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT6 - testiranje izuzetaka konstruktora\n{\n    try\n    {\n        Temperature a(9, 3);\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::range_error &e)\n    {\n        std::cout << e.what() << std::endl;\n    }\n}  ",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Nekorektne temperature"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3913,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT7 - testiranje izuzetka metode RegistrirajTemperature\n{\n    Temperature a(-4,9);\n    try\n    {\n        a.RegistrirajTemperature({1,3});\n        a.RegistrirajTemperature({1,4});\n        a.RegistrirajTemperature({-3,7});\n        a.RegistrirajTemperature({1,5});\n        a.RegistrirajTemperature({-6, 8});\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::range_error& e)\n    {\n        std::cout << a.DajBrojRegistriranihTemperatura() << \" \" << e.what() << std::endl;\n    }\n    \n    try\n    {\n        a.RegistrirajTemperature({1,3});\n        a.RegistrirajTemperature({1,4});\n        a.RegistrirajTemperature({-3,7});\n        a.RegistrirajTemperature({1,5});\n        a.RegistrirajTemperature({6, 2});\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::range_error& e)\n    {\n        std::cout << a.DajBrojRegistriranihTemperatura() << \" \" << e.what();\n    }\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "4 Nekorektne temperature\\n8 Nekorektne temperature"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3914,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT8 - testiranje unarnog operatora !\n{\n    Temperature a(-4,9);\n    std::cout << !a;\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    std::cout << \" \" << !a;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 0"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3915,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT9 - testiranje operatora pristupa[] i izuzetka\n{\n    Temperature a(-14,19);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    std::vector<std::pair<int,int>> temperature;\n    try\n    {\n        for (int i{0}; i < a.DajBrojRegistriranihTemperatura(); i++)\n        {\n            temperature.push_back(a[i]);\n            std::cout << \"Ovo se ne smije ispisati.\";\n        }\n    }\n    catch(const std::range_error &e)\n    {\n        std::cout << e.what() << std::endl;\n    }\n    \n    try\n    {\n        for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    }\n    catch(const std::range_error &e)\n    {\n        std::cout << e.what() << std::endl;\n    }\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Neispravan indeks\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3916,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT10 - testiranje operatora ++ i --\n{\n    Temperature a(-14,19);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    std::vector<std::pair<int,int>> temperature;\n    a++;\n    \n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n        temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n        \n    temperature.resize(0);\n    a--;\n    std::cout << std::endl;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n        temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "2 3\\n2 4\\n-2 7\\n2 3\\n3 5\\n-4 6\\n\\n2 2\\n2 3\\n-2 6\\n2 2\\n3 4\\n-4 5\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3917,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT11 - testiranje izuzetaka operatora ++ i --\n\/\/Ako dodje do bacanja izuzetka, nijedna temperatura se ne treba promijeniti.\n{\n    Temperature a(-14,19);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    std::vector<std::pair<int,int>> temperature;\n    a++;\n    \n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n        temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n        \n    temperature.resize(0);\n    a--;\n    std::cout << std::endl;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n        temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n        \n    try\n    {\n        std::cout << std::endl;\n        a++;\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error& e)\n    {\n        std::cout << e.what();\n        temperature.resize(0);\n\n        std::cout << std::endl;\n        for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n        for(auto t : temperature)   \n            std::cout << t.first << \" \" << t.second << std::endl;\n    }\n    \n    try\n    {\n        std::cout << std::endl;\n        a--;\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error& e)\n    {\n        std::cout << e.what();\n        temperature.resize(0);\n\n        std::cout << std::endl;\n        for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n        for(auto t : temperature)   \n            std::cout << t.first << \" \" << t.second << std::endl;\n    }\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "2 3\\n2 4\\n-2 7\\n2 3\\n3 5\\n-4 6\\n\\n2 2\\n2 3\\n-2 6\\n2 2\\n3 4\\n-4 5\\n\\nIlegalna operacija\\n2 2\\n2 3\\n-2 6\\n2 2\\n3 4\\n-4 5\\n\\nIlegalna operacija\\n2 2\\n2 3\\n-2 6\\n2 2\\n3 4\\n-4 5\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3918,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT12 - testiranje operatora == i !=\n{\n    Temperature a(-14,19);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    Temperature b(-14,19);\n    b.RegistrirajTemperature({1,3});\n    b.RegistrirajTemperature({1,4});\n    b.RegistrirajTemperature({-3,7});\n    b.RegistrirajTemperature({1,3});\n    b.RegistrirajTemperature({2,5});\n    b.RegistrirajTemperature({-5,6});\n    \n    Temperature c(-14, 21);\n    c.RegistrirajTemperature({1,3});\n    c.RegistrirajTemperature({1,4});\n    c.RegistrirajTemperature({-3,7});\n    c.RegistrirajTemperature({1,3});\n    c.RegistrirajTemperature({2,5});\n    c.RegistrirajTemperature({-5,6});\n    \n    Temperature d(-18,50);\n    d.RegistrirajTemperature({1,3});\n    d.RegistrirajTemperature({1,4});\n    d.RegistrirajTemperature({-3,7});\n    d.RegistrirajTemperature({1,3});\n    d.RegistrirajTemperature({2,5});\n    d.RegistrirajTemperature({-5,6});\n    \n    Temperature e(-20,50);\n    e.RegistrirajTemperature({1,3});\n    e.RegistrirajTemperature({2,4});\n    e.RegistrirajTemperature({-3,7});\n    e.RegistrirajTemperature({1,3});\n    e.RegistrirajTemperature({2,5});\n    e.RegistrirajTemperature({-5,6});\n    \n    \n    std::cout << (a == b) << \" \" << (a != b) << std::endl << (b == c)\n                << \" \" << (b != c) << std::endl << (c == d) << \" \" << (c != d)\n                << std::endl << (e == d) << \" \" << (e != d);\n    \n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 0\\n0 1\\n0 1\\n0 1"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3919,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT13 - testiranje operatora + i - (Temperature i cijeli brojevi)\n{\n    Temperature a(-50,60);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    a = a + 5;\n    \n    std::vector<std::pair<int,int>> temperature;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n        \n    a = a - 5;\n    temperature.resize(0);\n    std::cout << std::endl;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "6 8\\n6 9\\n2 12\\n6 8\\n7 10\\n0 11\\n\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3920,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT14 - testiranje operatora += i -= (Temperature i cijeli brojevi)\n{\n    Temperature a(-50,60);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    a += 5;\n    \n    std::vector<std::pair<int,int>> temperature;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n        \n    a -= 5;\n    temperature.resize(0);\n    std::cout << std::endl;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "6 8\\n6 9\\n2 12\\n6 8\\n7 10\\n0 11\\n\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3921,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT15 - testiranje izuzetaka operatora + i - (Temperature i cijeli brojevi)\n{\n    Temperature a(-7, 10);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    try\n    {\n        std::cout << \"Ovo se mora ispisati.\" << std::endl;\n        a = a + 5;\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error& e)\n    {\n        std::cout << e.what() << std::endl << std::endl;\n    }\n    \n    std::vector<std::pair<int,int>> temperature;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n        \n    try\n    {\n        std::cout << \"Ovo se mora ispisati.\" << std::endl;\n        a = a - 5;\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error& e)\n    {\n        std::cout << e.what() << std::endl << std::endl;\n    }\n    \n    temperature.resize(0);\n    std::cout << std::endl;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Ovo se mora ispisati.\\nPrekoracen dozvoljeni opseg temperatura\\n\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6\\nOvo se mora ispisati.\\nPrekoracen dozvoljeni opseg temperatura\\n\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3922,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT16 - testiranje izuzetaka operatora += i -= (Temperature i cijeli brojevi)\n{\n    Temperature a(-7, 10);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    try\n    {\n        std::cout << \"Ovo se mora ispisati.\" << std::endl;\n        a += 5;\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error& e)\n    {\n        std::cout << e.what() << std::endl << std::endl;\n    }\n    \n    std::vector<std::pair<int,int>> temperature;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n        \n    try\n    {\n        std::cout << \"Ovo se mora ispisati.\" << std::endl;\n        a -= 5;\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error& e)\n    {\n        std::cout << e.what() << std::endl;\n    }\n    \n    temperature.resize(0);\n    std::cout << std::endl;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Ovo se mora ispisati.\\nPrekoracen dozvoljeni opseg temperatura\\n\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6\\nOvo se mora ispisati.\\nPrekoracen dozvoljeni opseg temperatura\\n\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3923,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT17 - testiranje operatora + i - (cijeli brojevi i Temperature)\n{\n    Temperature a(-50,60);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    a = 5 + a;\n    \n    std::vector<std::pair<int,int>> temperature;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n      \n    Temperature b(-18, 20); \n    b = 20 - a;\n    temperature.resize(0);\n    std::cout << std::endl;\n    for (int i{1}; i <= b.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(b[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "6 8\\n6 9\\n2 12\\n6 8\\n7 10\\n0 11\\n\\n12 14\\n11 14\\n8 18\\n12 14\\n10 13\\n9 20\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3924,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT18 - testiranje izuzetaka operatora + i - (cijeli brojevi i Temperature)\n{\n    Temperature a(-7, 10);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    try\n    {\n        std::cout << \"Ovo se mora ispisati.\" << std::endl;\n        a = 5 + a;\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error& e)\n    {\n        std::cout << e.what() << std::endl << std::endl;\n    }\n    \n    std::vector<std::pair<int,int>> temperature;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n        \n    Temperature b (5, 6);\n    try\n    {\n        \n        std::cout << \"Ovo se mora ispisati.\" << std::endl;\n        b = 15 - a;\n        std::cout << \"Ovo se ne smije ispisati.\";\n    }\n    catch (const std::logic_error& e)\n    {\n        std::cout << e.what() << std::endl ;\n    }\n    \n    temperature.resize(0);\n    std::cout << std::endl;\n    for (int i{1}; i <= a.DajBrojRegistriranihTemperatura(); i++)\n            temperature.push_back(a[i]);\n    \n    for(auto t : temperature)   \n        std::cout << t.first << \" \" << t.second << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Ovo se mora ispisati.\\nPrekoracen dozvoljeni opseg temperatura\\n\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6\\nOvo se mora ispisati.\\nPrekoracen dozvoljeni opseg temperatura\\n\\n1 3\\n1 4\\n-3 7\\n1 3\\n2 5\\n-5 6\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3925,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT19 - testiranje unarnog operatora *\n{\n    Temperature a(-7, 10);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({-3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({-5,6});\n    \n    for(auto t : *a)   \n        std::cout << t << \" \";\n}\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "2 3 10 2 3 11 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3926,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT15 - testiranje operatora << \n{\n    Temperature a(-7, 10);\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({1,4});\n    a.RegistrirajTemperature({3,7});\n    a.RegistrirajTemperature({1,3});\n    a.RegistrirajTemperature({2,5});\n    a.RegistrirajTemperature({5,6});\n    \n    std::cout << a;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 1 3 1 2 5 \\n3 4 7 3 5 6 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}